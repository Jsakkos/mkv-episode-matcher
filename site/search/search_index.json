{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MKV Episode Matcher","text":"<p>Welcome to the MKV Episode Matcher documentation! This tool helps you automatically organize and rename your TV show episodes using information from The Movie Database (TMDb).</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83c\udfaf Automatic Episode Matching: Uses TMDb to accurately identify episodes</li> <li>\ud83d\udcdd Subtitle Extraction: Extracts subtitles from MKV files</li> <li>\ud83d\udd0d OCR Support: Handles image-based subtitles</li> <li>\ud83d\ude80 Multi-threaded: Fast processing of multiple files</li> <li>\u2b07\ufe0f Subtitle Downloads: Integration with OpenSubtitles</li> <li>\u2728 Bulk Processing: Handle entire seasons at once</li> <li>\ud83e\uddea Dry Run Mode: Test changes before applying</li> </ul>"},{"location":"#quick-example","title":"Quick Example","text":"<pre><code># Install the package\npip install mkv-episode-matcher\n\n# Run on a show directory\nmkv-match --show-dir \"path/to/your/show\" --season 1\n</code></pre>"},{"location":"#project-overview","title":"Project Overview","text":"<p>MKV Episode Matcher solves the common problem of organizing TV show libraries by:</p> <ol> <li>Analyzing MKV files in your show directory</li> <li>Extracting and processing subtitles</li> <li>Matching episodes with TMDb database</li> <li>Renaming files to a consistent format</li> </ol>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Python 3.12 or higher</li> <li>FFmpeg installed on your system</li> <li>TMDb API key</li> <li>Tesseract OCR (optional, for image-based subtitles)</li> <li>OpenSubtitles account (optional, for subtitle downloads)</li> </ul>"},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>Check the Quick Start Guide for basic usage</li> <li>See Configuration for setup details</li> <li>Browse the API Reference for detailed documentation</li> <li>Visit our GitHub repository for issues and updates</li> </ul>"},{"location":"cli/","title":"Command Line Interface","text":""},{"location":"cli/#basic-commands","title":"Basic Commands","text":""},{"location":"cli/#process-show","title":"Process Show","text":"<pre><code>mkv-match --show-dir \"/path/to/show\"\n</code></pre>"},{"location":"cli/#process-specific-season","title":"Process Specific Season","text":"<pre><code>mkv-match --show-dir \"/path/to/show\" --season 1\n</code></pre>"},{"location":"cli/#command-options","title":"Command Options","text":"Option Description Default <code>--show-dir</code> Show directory path None <code>--season</code> Season number to process None (all) <code>--dry-run</code> Test without making changes False <code>--get-subs</code> Download subtitles False <code>--tmdb-api-key</code> TMDb API key None <code>--tesseract-path</code> Path to Tesseract None"},{"location":"cli/#examples","title":"Examples","text":""},{"location":"cli/#dry-run-mode","title":"Dry Run Mode","text":"<pre><code>mkv-match --show-dir \"/path/to/show\" --dry-run true\n</code></pre>"},{"location":"cli/#download-subtitles","title":"Download Subtitles","text":"<pre><code>mkv-match --show-dir \"/path/to/show\" --get-subs true\n</code></pre>"},{"location":"cli/#set-api-key","title":"Set API Key","text":"<pre><code>mkv-match --show-dir \"/path/to/show\" --tmdb-api-key \"your_key\"\n</code></pre>"},{"location":"cli/#multiple-options","title":"Multiple Options","text":"<pre><code>mkv-match \\\n  --show-dir \"/path/to/show\" \\\n  --season 1 \\\n  --get-subs true \\\n  --dry-run true\n</code></pre>"},{"location":"cli/#environment-variables","title":"Environment Variables","text":"<p>Alternative to command line options:</p> <pre><code>export TMDB_API_KEY=\"your_key\"\nexport SHOW_DIR=\"/path/to/shows\"\nmkv-match\n</code></pre>"},{"location":"cli/#exit-codes","title":"Exit Codes","text":"Code Meaning 0 Success 1 General error 2 Configuration error 3 API error"},{"location":"cli/#logging","title":"Logging","text":"<p>Logs are stored in: <pre><code>~/.mkv-episode-matcher/logs/\n\u251c\u2500\u2500 stdout.log\n\u2514\u2500\u2500 stderr.log\n</code></pre></p>"},{"location":"cli/#tips","title":"Tips","text":"<ol> <li>Always use quotes around paths</li> <li>Use dry-run first to test</li> <li>Check logs for details</li> <li>Use full paths for reliability</li> </ol>"},{"location":"installation/","title":"Installation Guide","text":""},{"location":"installation/#basic-installation","title":"Basic Installation","text":"<p>Install MKV Episode Matcher using pip:</p> <pre><code>pip install mkv-episode-matcher\n</code></pre>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":""},{"location":"installation/#1-ffmpeg","title":"1. FFmpeg","text":"<p>FFmpeg is required for processing MKV files.</p> WindowsmacOSLinux <pre><code># Using Chocolatey\nchoco install ffmpeg\n\n# Or download from ffmpeg.org and add to PATH\n</code></pre> <pre><code># Using Homebrew\nbrew install ffmpeg\n</code></pre> <pre><code># Ubuntu/Debian\nsudo apt-get update\nsudo apt-get install ffmpeg\n\n# Fedora\nsudo dnf install ffmpeg\n</code></pre>"},{"location":"installation/#2-tesseract-ocr-optional","title":"2. Tesseract OCR (Optional)","text":"<p>Required for processing image-based subtitles.</p> WindowsmacOSLinux <pre><code># Using Chocolatey\nchoco install tesseract\n</code></pre> <pre><code># Using Homebrew\nbrew install tesseract\n</code></pre> <pre><code># Ubuntu/Debian\nsudo apt-get install tesseract-ocr\n</code></pre>"},{"location":"installation/#api-keys-setup","title":"API Keys Setup","text":"<ol> <li> <p>TMDb API Key</p> <ul> <li>Create an account at TMDb</li> <li>Go to your account settings</li> <li>Request an API key</li> </ul> </li> <li> <p>OpenSubtitles (Optional)</p> <ul> <li>Register at OpenSubtitles</li> <li>Get your API key from the dashboard</li> </ul> </li> </ol>"},{"location":"installation/#development-installation","title":"Development Installation","text":"<p>For contributing or development:</p> <pre><code># Clone the repository\ngit clone https://github.com/Jsakkos/mkv-episode-matcher.git\ncd mkv-episode-matcher\n\n# Create a virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e .\n</code></pre>"},{"location":"installation/#verification","title":"Verification","text":"<p>Verify your installation:</p> <pre><code>mkv-match --version\n</code></pre>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/#common-issues","title":"Common Issues","text":"<ol> <li> <p>FFmpeg not found <pre><code># Check FFmpeg installation\nffmpeg -version\n</code></pre></p> </li> <li> <p>Tesseract not found <pre><code># Check Tesseract installation\ntesseract --version\n</code></pre></p> </li> <li> <p>Python version mismatch <pre><code># Check Python version\npython --version\n</code></pre></p> </li> </ol> <p>If you encounter any issues, please open an issue on GitHub.</p>"},{"location":"quickstart/","title":"Quick Start Guide","text":"<p>Get started with MKV Episode Matcher in minutes.</p>"},{"location":"quickstart/#basic-usage","title":"Basic Usage","text":""},{"location":"quickstart/#1-process-a-single-season","title":"1. Process a Single Season","text":"<pre><code>mkv-match --show-dir \"/path/to/show\" --season 1\n</code></pre>"},{"location":"quickstart/#2-process-all-seasons","title":"2. Process All Seasons","text":"<pre><code>mkv-match --show-dir \"/path/to/show\"\n</code></pre>"},{"location":"quickstart/#3-test-run-no-changes","title":"3. Test Run (No Changes)","text":"<pre><code>mkv-match --show-dir \"/path/to/show\" --dry-run true\n</code></pre>"},{"location":"quickstart/#4-download-subtitles","title":"4. Download Subtitles","text":"<pre><code>mkv-match --show-dir \"/path/to/show\" --get-subs true\n</code></pre>"},{"location":"quickstart/#directory-structure","title":"Directory Structure","text":"<p>MKV Episode Matcher expects your TV shows to be organized as follows:</p> <pre><code>Show Name/\n\u251c\u2500\u2500 Season 1/\n\u2502   \u251c\u2500\u2500 episode1.mkv\n\u2502   \u251c\u2500\u2500 episode2.mkv\n\u251c\u2500\u2500 Season 2/\n\u2502   \u251c\u2500\u2500 episode1.mkv\n\u2502   \u2514\u2500\u2500 episode2.mkv\n</code></pre>"},{"location":"quickstart/#python-api-usage","title":"Python API Usage","text":"<pre><code>from mkv_episode_matcher import process_show\n\n# Process all seasons\nprocess_show()\n\n# Process specific season\nprocess_show(season=1)\n\n# Test run\nprocess_show(season=1, dry_run=True)\n\n# With subtitles\nprocess_show(season=1, get_subs=True)\n</code></pre>"},{"location":"quickstart/#configuration","title":"Configuration","text":"<p>Create a configuration file at <code>~/.mkv-episode-matcher/config.ini</code>:</p> <pre><code>[Config]\ntmdb_api_key = your_api_key\nopen_subtitles_api_key = your_opensubs_key\nshow_dir = /path/to/shows\nmax_threads = 4\n</code></pre>"},{"location":"quickstart/#next-steps","title":"Next Steps","text":"<ul> <li>Check the Configuration Guide for detailed setup</li> <li>See Tips and Tricks for advanced usage</li> <li>Browse the API Reference for detailed documentation</li> </ul>"},{"location":"tips/","title":"Tips and Tricks","text":""},{"location":"tips/#best-practices","title":"Best Practices","text":""},{"location":"tips/#directory-organization","title":"Directory Organization","text":"<p>Organize your files consistently: <pre><code>TV Shows/\n\u251c\u2500\u2500 Show Name/\n\u2502   \u251c\u2500\u2500 Season 1/\n\u2502   \u2502   \u251c\u2500\u2500 episode1.mkv\n\u2502   \u2502   \u2514\u2500\u2500 episode2.mkv\n\u2502   \u2514\u2500\u2500 Season 2/\n\u2502       \u251c\u2500\u2500 episode1.mkv\n\u2502       \u2514\u2500\u2500 episode2.mkv\n</code></pre></p>"},{"location":"tips/#performance-optimization","title":"Performance Optimization","text":"<ol> <li> <p>Thread Configuration <pre><code>[Config]\nmax_threads = 4  # Adjust based on CPU cores\n</code></pre></p> </li> <li> <p>Batch Processing <pre><code># Process multiple seasons\nfor i in {1..5}; do\n  mkv-match --show-dir \"/path/to/show\" --season $i\ndone\n</code></pre></p> </li> </ol>"},{"location":"tips/#error-handling","title":"Error Handling","text":"<ol> <li> <p>Always use dry-run first:    <pre><code>mkv-match --show-dir \"/path/to/show\" --dry-run true\n</code></pre></p> </li> <li> <p>Check logs regularly:    <pre><code>tail -f ~/.mkv-episode-matcher/logs/stderr.log\n</code></pre></p> </li> </ol>"},{"location":"tips/#advanced-usage","title":"Advanced Usage","text":""},{"location":"tips/#custom-matching","title":"Custom Matching","text":"<pre><code>from mkv_episode_matcher import process_show\n\n# Custom matching with specific settings\nprocess_show(\n    season=1,\n    dry_run=True,\n    get_subs=True\n)\n</code></pre>"},{"location":"tips/#subtitle-processing","title":"Subtitle Processing","text":"<ol> <li> <p>Extract subtitles only:    <pre><code>from mkv_episode_matcher.mkv_to_srt import convert_mkv_to_srt\nconvert_mkv_to_srt(season_path, mkv_files)\n</code></pre></p> </li> <li> <p>Download specific subtitles:    <pre><code>from mkv_episode_matcher.utils import get_subtitles\nget_subtitles(show_id, {1, 2, 3})  # Seasons 1, 2, 3\n</code></pre></p> </li> </ol>"},{"location":"tips/#troubleshooting","title":"Troubleshooting","text":""},{"location":"tips/#common-issues","title":"Common Issues","text":"<ol> <li> <p>File Permission Errors <pre><code># Check file permissions\nchmod -R 644 \"/path/to/show\"\n</code></pre></p> </li> <li> <p>API Rate Limits</p> </li> <li>Use rate limiting in configuration</li> <li> <p>Implement exponential backoff</p> </li> <li> <p>Memory Usage</p> </li> <li>Reduce max_threads</li> <li>Process seasons separately</li> </ol>"},{"location":"tips/#maintenance","title":"Maintenance","text":""},{"location":"tips/#clean-up","title":"Clean Up","text":"<ol> <li> <p>Remove temporary files:    <pre><code>from mkv_episode_matcher.utils import cleanup_ocr_files\ncleanup_ocr_files(show_dir)\n</code></pre></p> </li> <li> <p>Clear cache:    <pre><code>rm -rf ~/.mkv-episode-matcher/cache/*\n</code></pre></p> </li> </ol>"},{"location":"tips/#backup-strategy","title":"Backup Strategy","text":"<ol> <li> <p>Create backups before processing:    <pre><code>cp -r \"/path/to/show\" \"/path/to/backup\"\n</code></pre></p> </li> <li> <p>Use dry-run to verify changes:    <pre><code>mkv-match --show-dir \"/path/to/show\" --dry-run true\n</code></pre></p> </li> </ol>"},{"location":"tips/#integration-tips","title":"Integration Tips","text":""},{"location":"tips/#automation","title":"Automation","text":"<ol> <li> <p>Cron Jobs <pre><code># Check for new episodes daily\n0 0 * * * mkv-match --show-dir \"/path/to/show\" --get-subs true\n</code></pre></p> </li> <li> <p>Watch Folders <pre><code># Monitor for new files\nfrom watchdog.observers import Observer\nfrom watchdog.events import FileSystemEventHandler\n</code></pre></p> </li> </ol>"},{"location":"tips/#api-usage","title":"API Usage","text":"<ol> <li> <p>Rate limiting:    <pre><code>from mkv_episode_matcher.tmdb_client import RateLimitedRequest\nrequest = RateLimitedRequest(rate_limit=30, period=1)\n</code></pre></p> </li> <li> <p>Cache management:    <pre><code># Cache API responses\nimport shelve\nwith shelve.open('cache') as db:\n    # Cache operations\n</code></pre></p> </li> </ol>"},{"location":"api/episode-matcher/","title":"Episode Matcher Module","text":"<p>The Episode Matcher module is the core component responsible for processing and matching TV show episodes. It handles the entire workflow from file analysis to renaming.</p>"},{"location":"api/episode-matcher/#main-functions","title":"Main Functions","text":""},{"location":"api/episode-matcher/#process_show","title":"process_show()","text":"<pre><code>def process_show(season: Optional[int] = None, dry_run: bool = False, get_subs: bool = False) -&gt; None:\n    \"\"\"\n    Process a TV show by matching episodes and optionally downloading subtitles.\n\n    Args:\n        season: Optional season number to process. If None, processes all seasons.\n        dry_run: If True, shows what would be done without making changes.\n        get_subs: If True, downloads subtitles for matched episodes.\n    \"\"\"\n</code></pre>"},{"location":"api/episode-matcher/#compare_and_rename_files","title":"compare_and_rename_files()","text":"<pre><code>def compare_and_rename_files(\n    srt_files: Dict[str, List[str]], \n    reference_files: Dict[str, List[str]], \n    dry_run: bool = False\n) -&gt; None:\n    \"\"\"\n    Compare SRT files with references and rename matching files.\n\n    Args:\n        srt_files: Dictionary of SRT file paths and their contents\n        reference_files: Dictionary of reference file paths and contents\n        dry_run: If True, only simulate renaming\n    \"\"\"\n</code></pre>"},{"location":"api/episode-matcher/#workflow","title":"Workflow","text":"<ol> <li>Show Detection</li> <li>Identifies show directory structure</li> <li>Validates MKV files</li> <li> <p>Prepares processing queue</p> </li> <li> <p>Subtitle Processing</p> </li> <li>Extracts subtitles from MKV files</li> <li>Converts to SRT format</li> <li> <p>Performs OCR if needed</p> </li> <li> <p>Episode Matching</p> </li> <li>Compares extracted subtitles with reference</li> <li>Calculates match confidence</li> <li> <p>Determines episode numbers</p> </li> <li> <p>File Operations</p> </li> <li>Renames matched files</li> <li>Organizes directory structure</li> <li>Cleans up temporary files</li> </ol>"},{"location":"api/episode-matcher/#examples","title":"Examples","text":""},{"location":"api/episode-matcher/#basic-usage","title":"Basic Usage","text":"<pre><code>from mkv_episode_matcher import process_show\n\n# Process all seasons\nprocess_show()\n</code></pre>"},{"location":"api/episode-matcher/#process-specific-season","title":"Process Specific Season","text":"<pre><code># Process season 2 only\nprocess_show(season=2)\n</code></pre>"},{"location":"api/episode-matcher/#dry-run-mode","title":"Dry Run Mode","text":"<pre><code># Test without making changes\nprocess_show(season=1, dry_run=True)\n</code></pre>"},{"location":"api/episode-matcher/#with-subtitle-download","title":"With Subtitle Download","text":"<pre><code># Process and download subtitles\nprocess_show(get_subs=True)\n</code></pre>"},{"location":"api/episode-matcher/#error-handling","title":"Error Handling","text":"<p>The module uses extensive error handling to ensure reliable operation:</p> <pre><code>try:\n    process_show(season=1)\nexcept Exception as e:\n    logger.error(f\"Processing error: {e}\")\n    # Handle specific error cases\n</code></pre>"},{"location":"api/episode-matcher/#logging","title":"Logging","text":"<p>All operations are logged using loguru:</p> <pre><code>from loguru import logger\n\n# Configuration example\nlogger.add(\n    \"episode_matcher.log\",\n    rotation=\"500 MB\",\n    level=\"INFO\"\n)\n</code></pre>"},{"location":"api/episode-matcher/#best-practices","title":"Best Practices","text":"<ol> <li>Always run with <code>dry_run=True</code> first to validate changes</li> <li>Ensure proper directory structure before processing</li> <li>Keep original files backed up until validation</li> <li>Monitor logs for potential issues</li> <li>Use appropriate error handling in production</li> </ol>"},{"location":"api/episode-matcher/#tips","title":"Tips","text":"<ul> <li>Use multi-threading for large collections</li> <li>Regular expressions can be customized for special cases</li> <li>Monitor disk space during processing</li> <li>Configure logging appropriately for your needs</li> </ul>"}]}